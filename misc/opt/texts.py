from typing import Union

from aiogram import types
from aiogram.utils.formatting import Text, as_list, TextLink, Bold, Code, Italic

from misc.bot import Contact

i_start = as_list(
    Text("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!"),
    Text("–Ø –ï–ª–µ–Ω–∞, —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –æ—Ç–¥–µ–ª–∞ ", TextLink("–û–ó –õ—É–±—è–Ω–∫–∞", url="https://t.me/remarket_msk"), "."),
    Text("–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ", Bold("–û—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä"), " –∏ –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –ª—é–±—ã–º —É–¥–æ–±–Ω—ã–º –¥–ª—è –í–∞—Å —Å–ø–æ—Å–æ–±–æ–º."))

a_start_dialog = as_list(
    Text("ü§ñ"),
    Text("–í—ã –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞"))

i_start_dialog = as_list(
    Text("üë©üèª‚Äçüíª"),
    Text("–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∏ —è –æ—Ç–≤–µ—á—É –í–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!"))

a_end_dialog = as_list(
    Text("ü§ñ"),
    Text("–í—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏ –¥–∏–∞–ª–æ–≥ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞"))

i_share_contact = as_list(
    Text("ü§ñ"),
    Text("–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Ç–µ–∫—É—â–∏–º:"))

a_wrong_type = as_list(
    Text("ü§ñ"),
    Text("–£–ø—Å—Å—Å... –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...:(("),
    Text("–í–æ–∑–º–æ–∂–Ω–æ –æ–±–º–µ–Ω –¥–∞–Ω–Ω—ã–º —Ç–∏–ø–æ–º –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"),)

as_wrong_type = Text("–£–ø—Å—Å—Å... –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...:((")

def bi_start (ref: str) -> Text:
    return as_list(
        Text("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!"),
        Text("–Ø –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–∞", TextLink("–û—Ç–¥–µ–ª –ó–∞—Å—Ç—Ä–æ–π—â–∏–∫–æ–≤, –õ—É–±—è–Ω–∫–∞", url="https://t.me/remarket_msk"), "."),
        Text("–í—ã –æ—Å—Ç–∞–≤–∏–ª–∏ ‚ûï –ø–æ–¥ ", TextLink("–ø–æ—Å—Ç–æ–º", url=f"https://t.me/remarket_msk/{ref}"), "."),
        Text(
            "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ", Bold("–û—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä"), " –∏ –º–µ–Ω–µ–¥–∂–µ—Ä –≤—ã—à–ª–µ—Ç –≤–∞–º –ø–æ–¥—Ä–æ–±–Ω—É—é –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –æ ",
            "–ñ–ö –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä, –∞ —Ç–∞–∫–∂–µ —É—Ç–æ—á–Ω–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º, —á—Ç–æ–±—ã —Å–æ—Å—Ç–∞–≤–∏—Ç—å ",
            "–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é –ø–æ–¥–±–æ—Ä–∫—É —Ç–æ—á–µ—á–Ω–æ –ø–æ–¥ –í–∞—à –∑–∞–ø—Ä–æ—Å."
            )
    )

def bi_phone_confirm(phone_number: str) -> Text:

    if phone_number == None:
        return as_list(
            Text("ü§ñ"),
            Text(f"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞"),
            Text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:"),
            Text("8XXX-XXX-XX-XX")
        )        
    
    return as_list(
        Text("ü§ñ"),
        Text(f"–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone_number}"),
        Text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
    )

def bi_contact_confirm(user_name: str, phone_number: str) -> Text:
    return as_list(
        Text("ü§ñ"),
        Text("–í–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:"),
        Text("üìû    ", phone_number),
        Text("‚òëÔ∏è    ", Code(user_name)),
        Text(" "),
		Text("–í—Å–∫–æ—Ä–µ –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏"),
        Italic("*–µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –≤–µ—Ä–Ω—ã, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é"), 
    )
	
def bi_2hotline(
        obj: types.Message, 
        refs: Union[str, list, None], 
        contact: Union[Contact, None] = None) -> Text:

    if contact:
        if contact.full_name != obj.from_user.full_name:
            full_name = contact.full_name + " –∏–ª–∏ " + obj.from_user.full_name

        else:
            full_name = obj.from_user.full_name

        msg_text = Text(
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{obj.from_user.username}, ",
            f"–ø–æ–¥ –∏–º–µ–Ω–µ–º {full_name}, ",
            f"–ø—Ä–æ—Å–∏—Ç —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∏–º –ø–æ –Ω–æ–º–µ—Ä—É ",
            f"{contact.phone_number}"
        )
        
    else:
        msg_text = Text(
            f"–û–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{obj.from_user.username}, ",
            f"–ø–æ–¥ –∏–º–µ–Ω–µ–º {obj.from_user.full_name}",
        )
        
    if refs:
        if isinstance(refs, str):
            refs = f"https://t.me/remarket_msk/{refs}"

        elif isinstance(refs, list):
            refs = [f"https://t.me/remarket_msk/{ref}" for ref in refs]

        msg_text = as_list(
            msg_text,
            as_list(
                "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –µ–≥–æ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–∏: ", 
                refs
            )
        )

    """
    —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ–≥–ª–∞—Å–Ω–æ –∑–∞–ø—Ä–æ—Å—É
    –∑–∞—Ç–µ–º –¥–æ–±–∞–≤–ª—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏, –µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è 
    """

    return msg_text